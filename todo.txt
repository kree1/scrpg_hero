OptionMenu config options: ['activebackground', 'activeforeground', 'anchor', 'background', 'bd', 
'bg', 'bitmap', 'borderwidth', 'cursor', 'direction', 'disabledforeground', 'fg', 'font', 
'foreground', 'height', 'highlightbackground', 'highlightcolor', 'highlightthickness', 'image', 
'indicatoron', 'justify', 'menu', 'padx', 'pady', 'relief', 'compound', 'state', 'takefocus', 
'text', 'textvariable', 'underline', 'width', 'wraplength']

Font families:
'System', '8514oem', 'Fixedsys', 'Terminal', 'Modern', 'Roman', 'Script', 'Courier', 'MS Serif',
'MS Sans Serif', 'Small Fonts', 'Adobe Caslon Pro Bold', 'Adobe Caslon Pro', 'Adobe Fangsong Std
R', '@Adobe Fangsong Std R', 'Adobe Fan Heiti Std B', '@Adobe Fan Heiti Std B', 'Adobe Gothic Std
B', '@Adobe Gothic Std B', 'Adobe Heiti Std R', '@Adobe Heiti Std R', 'Adobe Kaiti Std R', '@Adobe
Kaiti Std R', 'Adobe Garamond Pro Bold', 'Adobe Garamond Pro', 'Birch Std', 'Blackoak Std', 'Brush
Script Std', 'Chaparral Pro', 'Charlemagne Std', 'Cooper Std Black', 'Giddyup Std', 'Hobo Std',
'Kozuka Gothic Pr6N B', '@Kozuka Gothic Pr6N B', 'Kozuka Gothic Pr6N EL', '@Kozuka Gothic Pr6N EL',
'Kozuka Gothic Pr6N H', '@Kozuka Gothic Pr6N H', 'Kozuka Gothic Pr6N L', '@Kozuka Gothic Pr6N L',
'Kozuka Gothic Pr6N M', '@Kozuka Gothic Pr6N M', 'Kozuka Gothic Pr6N R', '@Kozuka Gothic Pr6N R',
'Kozuka Mincho Pr6N B', '@Kozuka Mincho Pr6N B', 'Kozuka Mincho Pr6N EL', '@Kozuka Mincho Pr6N EL',
'Kozuka Mincho Pr6N H', '@Kozuka Mincho Pr6N H', 'Kozuka Mincho Pr6N L', '@Kozuka Mincho Pr6N L',
'Kozuka Mincho Pr6N M', '@Kozuka Mincho Pr6N M', 'Kozuka Mincho Pr6N R', '@Kozuka Mincho Pr6N R',
'Lithos Pro Regular', 'Mesquite Std', 'Minion Pro Cond', 'Minion Pro Med', 'Minion Pro SmBd',
'Nueva Std Cond', 'OCR A Std', 'Orator Std', 'Poplar Std', 'Prestige Elite Std', 'Rosewood Std
Regular', 'Stencil Std', 'Tekton Pro', 'Tekton Pro Cond', 'Tekton Pro Ext', 'Trajan Pro', 'Adobe
Arabic', 'Adobe Hebrew', 'Adobe Ming Std L', '@Adobe Ming Std L', 'Adobe Myungjo Std M', '@Adobe
Myungjo Std M', 'Adobe Song Std L', '@Adobe Song Std L', 'Kozuka Gothic Pro B', '@Kozuka Gothic Pro
B', 'Kozuka Gothic Pro EL', '@Kozuka Gothic Pro EL', 'Kozuka Gothic Pro H', '@Kozuka Gothic Pro H',
'Kozuka Gothic Pro L', '@Kozuka Gothic Pro L', 'Kozuka Gothic Pro M', '@Kozuka Gothic Pro M',
'Kozuka Gothic Pro R', '@Kozuka Gothic Pro R', 'Kozuka Mincho Pro B', '@Kozuka Mincho Pro B',
'Kozuka Mincho Pro EL', '@Kozuka Mincho Pro EL', 'Kozuka Mincho Pro H', '@Kozuka Mincho Pro H',
'Kozuka Mincho Pro L', '@Kozuka Mincho Pro L', 'Kozuka Mincho Pro M', '@Kozuka Mincho Pro M',
'Kozuka Mincho Pro R', '@Kozuka Mincho Pro R', 'Letter Gothic Std', 'Minion Pro', 'Myriad Pro',
'Myriad Pro Cond', 'Myriad Pro Light', 'Gill Sans MT Std Heavy', 'Gill Sans MT Std Light', 'Gill
Sans MT Std Medium', 'Gill Sans MT Std UltraBold', 'Gill Sans MT Std UltraBold Cond', 'Gill Sans
Shadowed MT Pro Light', 'Gill Sans Shadowed MT Std Light', 'Gill Sans Shadow MT Pro', 'Gill Sans
Shadow MT Std', 'Gill Sans Std Bold ExtraCond', 'ACME Secret Agent BB', 'Astounder Squared BB',
'Astounder Squared LC BB', 'Gill Sans MT Pro Medium', 'Gill Sans MT Pro Condensed', 'Gill Sans MT
Pro Bold ExtCond', 'Gill Sans MT Pro Book', 'Gill Sans MT Pro ExtraBold', 'Gill Sans MT Pro Heavy',
'Gill Sans MT Pro Light', 'Gill Sans MT Pro UltraBold', 'Gill Sans MT Pro UltraBold Cond', 'Gill
Sans MT Std Condensed', 'Gill Sans MT Std Book', 'Gill Sans MT Std ExraBold', 'Marlett', 'Arial',
'Arabic Transparent', 'Arial Baltic', 'Arial CE', 'Arial CYR', 'Arial Greek', 'Arial TUR', 'Arial
Black', 'Bahnschrift Light', 'Bahnschrift SemiLight', 'Bahnschrift', 'Bahnschrift SemiBold',
'Bahnschrift Light SemiCondensed', 'Bahnschrift SemiLight SemiConde', 'Bahnschrift SemiCondensed',
'Bahnschrift SemiBold SemiConden', 'Bahnschrift Light Condensed', 'Bahnschrift SemiLight
Condensed', 'Bahnschrift Condensed', 'Bahnschrift SemiBold Condensed', 'Calibri', 'Calibri Light',
'Cambria', 'Cambria Math', 'Candara', 'Candara Light', 'Comic Sans MS', 'Consolas', 'Constantia',
'Corbel', 'Corbel Light', 'Courier New', 'Courier New Baltic', 'Courier New CE', 'Courier New CYR',
'Courier New Greek', 'Courier New TUR', 'Ebrima', 'Franklin Gothic Medium', 'Gabriola', 'Gadugi',
'Georgia', 'Impact', 'Ink Free', 'Javanese Text', 'Leelawadee UI', 'Leelawadee UI Semilight',
'Lucida Console', 'Lucida Sans Unicode', 'Malgun Gothic', '@Malgun Gothic', 'Malgun Gothic
Semilight', '@Malgun Gothic Semilight', 'Microsoft Himalaya', 'Microsoft JhengHei', '@Microsoft
JhengHei', 'Microsoft JhengHei UI', '@Microsoft JhengHei UI', 'Microsoft JhengHei Light',
'@Microsoft JhengHei Light', 'Microsoft JhengHei UI Light', '@Microsoft JhengHei UI Light',
'Microsoft New Tai Lue', 'Microsoft PhagsPa', 'Microsoft Sans Serif', 'Microsoft Tai Le',
'Microsoft YaHei', '@Microsoft YaHei', 'Microsoft YaHei UI', '@Microsoft YaHei UI', 'Microsoft
YaHei Light', '@Microsoft YaHei Light', 'Microsoft YaHei UI Light', '@Microsoft YaHei UI Light',
'Microsoft Yi Baiti', 'MingLiU-ExtB', '@MingLiU-ExtB', 'PMingLiU-ExtB', '@PMingLiU-ExtB',
'MingLiU_HKSCS-ExtB', '@MingLiU_HKSCS-ExtB', 'Mongolian Baiti', 'MS Gothic', '@MS Gothic', 'MS UI
Gothic', '@MS UI Gothic', 'MS PGothic', '@MS PGothic', 'MV Boli', 'Myanmar Text', 'Nirmala UI',
'Nirmala UI Semilight', 'Palatino Linotype', 'Segoe MDL2 Assets', 'Segoe Print', 'Segoe Script',
'Segoe UI', 'Segoe UI Black', 'Segoe UI Emoji', 'Segoe UI Historic', 'Segoe UI Light', 'Segoe UI
Semibold', 'Segoe UI Semilight', 'Segoe UI Symbol', 'SimSun', '@SimSun', 'NSimSun', '@NSimSun',
'SimSun-ExtB', '@SimSun-ExtB', 'Sitka Small', 'Sitka Text', 'Sitka Subheading', 'Sitka Heading',
'Sitka Display', 'Sitka Banner', 'Sylfaen', 'Symbol', 'Tahoma', 'Times New Roman', 'Times New Roman
Baltic', 'Times New Roman CE', 'Times New Roman CYR', 'Times New Roman Greek', 'Times New Roman
TUR', 'Trebuchet MS', 'Verdana', 'Webdings', 'Wingdings', 'Yu Gothic', '@Yu Gothic', 'Yu Gothic
UI', '@Yu Gothic UI', 'Yu Gothic UI Semibold', '@Yu Gothic UI Semibold', 'Yu Gothic Light', '@Yu
Gothic Light', 'Yu Gothic UI Light', '@Yu Gothic UI Light', 'Yu Gothic Medium', '@Yu Gothic
Medium', 'Yu Gothic UI Semilight', '@Yu Gothic UI Semilight', 'HoloLens MDL2 Assets', 'Unmasked
BB', 'Vaporized BB', 'Warmonger BB', 'Wicked Queen BB', 'YouMurderer BB', 'SmackAttack BB',
'StraightToHell BB', 'StraightToHell Sinner BB', 'Ticking Timebomb BB', 'Turntablz BB', 'BlackHole
BB', 'Coalition', 'Construthinvism', 'Damn Noisy Kids', 'Feedback BB', 'Flyboy BB', 'Nevis',
'Praetorium BB', 'Psiphoon BB', 'Pythia', 'Santas Big Secret BB', 'Seven Monkey Fury BB', 'Seven
Swordsmen BB', 'ShockTherapy BB', 'Agency FB', 'Arial Narrow', 'Arial Rounded MT Bold', 'Blackadder
ITC', 'Bodoni MT', 'Bodoni MT Black', 'Bodoni MT Condensed', 'Book Antiqua', 'Bookman Old Style',
'Bradley Hand ITC', 'Calisto MT', 'Castellar', 'Century Gothic', 'Century Schoolbook', 'Copperplate
Gothic Bold', 'Copperplate Gothic Light', 'Curlz MT', 'Edwardian Script ITC', 'Elephant',
'Engravers MT', 'Eras Bold ITC', 'Eras Demi ITC', 'Eras Light ITC', 'Eras Medium ITC', 'Felix
Titling', 'Forte', 'Franklin Gothic Book', 'Franklin Gothic Demi', 'Franklin Gothic Demi Cond',
'Franklin Gothic Heavy', 'Franklin Gothic Medium Cond', 'French Script MT', 'Garamond', 'Gigi',
'Gill Sans MT Ext Condensed Bold', 'Gill Sans MT', 'Gill Sans MT Condensed', 'Gill Sans Ultra
Bold', 'Gill Sans Ultra Bold Condensed', 'Gloucester MT Extra Condensed', 'Goudy Old Style', 'Goudy
Stout', 'Haettenschweiler', 'Imprint MT Shadow', 'Lucida Sans', 'Lucida Sans Typewriter', 'Maiandra
GD', 'Monotype Corsiva', 'OCR A Extended', 'Palace Script MT', 'Papyrus', 'Perpetua', 'Perpetua
Titling MT', 'Pristina', 'Rage Italic', 'Rockwell', 'Rockwell Condensed', 'Rockwell Extra Bold',
'Script MT Bold', 'Tw Cen MT', 'Tw Cen MT Condensed', 'Wingdings 2', 'Wingdings 3', 'Bookshelf
Symbol 7', 'MS Reference Sans Serif', 'MS Reference Specialty', 'Tw Cen MT Condensed Extra Bold',
'Newsflash BB', 'Orc Horde BB', 'Orc Horde Inline BB', 'Armor Piercing', 'Big Bloke BB',
'CrashLanding BB', 'CryptCreep BB', 'CryptCreep Heavy BB', 'FireFight BB', 'Government Agent BB',
'LowRider BB', 'Lato', 'Lato Light', 'Lato Semibold', 'RedStateBlueState BB', 'Roboto'

'Terminal', 'Modern', 'Roman', 'Script', 'Courier', 'Arial', 'Calibri', 'Times New Roman', 
 Terminal, Courier: not good looks
 Script, Modern, Roman: even worse
'Arial', 'Calibri', 'Times New Roman', 
 Best options seem to be Arial.9 & Calibri.10
  
Assign rwidth values to existing ExpandWindow calls
	Hero.ChoosePQ, 6534 (choose a section of the power/quality list)
	Hero.AddPrinciple, 6663 (choose a principle to replace)
	Hero.ChoosePrinciple, 6748 (choose a principle to add)
	Hero.GuidedBackground, 7024 (choose a die result or reroll)
	Hero.ConstructedBackground, 7096 (choose a background from the list)
	Hero.ChooseAbility, 7330 (choose a section of the ability list)
.	Hero.ChooseAbility, 7369 (choose an ability from the list)
	Hero.GuidedPowerSource, 7956 (choose a die result or reroll)
	Hero.ConstructedPowerSource, 8034 (choose a power source from the list)
	Hero.ChooseForm, 8481 (choose a form from the list)
	Hero.AddArchetype, 9061 (choose a green mode from the list)
	Hero.AddArchetype, 9111 (choose a yellow mode from the list)
	Hero.AddArchetype, 9158 (choose a red mode from the list)
	Hero.AddArchetype, 9441 (choose a transition type)
	Hero.AddArchetype, 9499 (choose a build option for divided)
	Hero.GuidedArchetype, 9785 (choose a die result or reroll for initial archetype)
	Hero.GuidedArchetype, 9921 (choose a die result or reroll for subordinate archetype)
	Hero.ConstructedArchetype, 9971 (choose an initial archetype from the list)
	Hero.ConstructedArchetype, 10015 (choose a subordinate archetype from the list)
	Hero.GuidedPersonality, 10343 (choose a die result or reroll)
	Hero.ConstructedPersonality, 10436 (choose one of your two personalities from the list)
	Hero.ConstructedPersonality, 10500 (choose your single personality from the list)
	Hero.AddRedAbility, 10642 (choose a category of red ability)
.	Hero.AddRetcon, 10843 (choose an ability to edit)
	Hero.AddRetcon, 11091 (choose a category of replacement principle)

Assign width values to existing EnterText calls
 Hero.AddPQDie, line 6326 (rename this power/quality)
 Hero.ChooseAbility, line 7617 (rename this ability)
 Hero.AddMode, line 8202 (rename this Mode)
 Hero.ChooseForm, line 8670 (rename this Form)
 Hero.AddArchetype, line 9419 (rename this Divided form)

Assign indented/breaks/hanging values to existing DisplayBackground, BackgroundDetails, DisplayPowerSource, PowerSourceDetails, DisplayArchetype, ArchetypeDetails, etc. calls
  Display() methods
	Hero.GuidedBackground, line 7015 (expand this background if not UseGUI)
	Hero.ConstructedBackground, line 7080 (expand this background if not UseGUI)
	Hero.GuidedPowerSource, line 7864 (expand this power source if not UseGUI)
	Hero.ConstructedPowerSource, line 7937 (expand this power source if not UseGUI)
	Hero.GuidedArchetype, line 9634 (expand this archetype if not UseGUI)
	Hero.GuidedArchetype, line 9765 (expand this archetype if not UseGUI)
	Hero.ConstructedArchetype, line 9809 (expand this archetype if not UseGUI)
	Hero.ConstructedArchetype, line 9851 (expand this archetype if not UseGUI)
	Hero.GuidedPersonality, line 10171 (expand this personality if not UseGUI)
	Hero.ConstructedPersonality, line 10260 (expand this personality if not UseGUI)
	Hero.ConstructedPersonality, line 10319 (expand this personality if not UseGUI)
	Hero.AddArchetype, line 9298 (expand this transition method if not UseGUI)
	Hero.AddMode, line 7964 (expand this mode template)
	Hero.AddArchetype, line 8883 (expand Powerless Mode)
	Hero.AddArchetype, line 8931 (expand this mode template if not UseGUI)
	Hero.AddArchetype, line 8980 (expand this mode template if not UseGUI)
	Hero.AddArchetype, line 9022 (expand this mode template if not UseGUI)
  Details() methods
	done!
	
Create a Hero method for "let the user choose from a list or request details" so that code isn't being duplicated all over the place
 Hero.ChooseDetailIndex
 Call this method from...
	Hero.ChoosePQ, 7112 (choose a section of the Power/Quality list)
?	Hero.AddPrinciple, 7256 (choose a Principle to replace)
x	Hero.ChooseAbility, 8011 (choose a section of the Ability list)
x	Hero.AddRedAbility, 12029 (choose a category of Red Abilities)
x	Hero.AddRetcon, 12572 (choose a Principle category)
		These decisions need the short list items to be multi-line in the text shell so the user can tell them apart, and ExpandWindow won't take a multi-line list item, so
		the text and GUI versions need different lists of line items, which ChooseDetailIndex isn't set up for

? Consolidate mode selection process into a single loop, like form selection ?
 ~ This would pretty much require creating a ChooseMode method to handle the text prompts, mode option lists, GUI/nonGUI procedures, etc.

Figure out titleWidth
  
Complete steps of hero creation are now reversible
 Can we make this more granular?
  What would it take for the user to be able to stop in the middle of a step?
   Data entry windows would need a "Cancel" button
.	SelectFrame
.	EntryFrame
.	ExpandFrame
.	SwapFrame
.	PrincipleFrame
.	AssignFrame
   Hitting "Cancel" or the X button would need to send a message back to the Hero
.	Hero.__init__: self.proceed = 1
.	Hero.copy: mirror.proceed = self.proceed
	Pass proceed to all data entry windows as success; windows set success to 0 if they're canceled
.	 SelectWindow/SelectFrame
.	 EntryWindow/EntryFrame
.	 ExpandWindow/ExpandFrame
.	 SwapWindow/SwapFrame
.	 PrincipleWindow/PrincipleFrame
.	 AssignWindow/AssignFrame
.	When a Hero/HeroFrame method creates a window (explicitly or via ChooseIndex, EnterText, or ChooseDetailIndex), it passes success=IntVar(self.myFrame, 1)
	After a Hero method creates a window explicitly, it sets self.proceed to the value of success
.	 ChooseIndex
.	 EnterText
.	 ChooseDetailIndex
.	 ChoosePQ
.	 AddPrinciple
.	 ChoosePrinciple
.	 ChooseAbility
.	 ChooseForm
.	 AddArchetype
.	 AddRedAbility
.	 AddRetcon
	After a Hero/HeroFrame method gets a choice from the user (explicitly or via method call), it checks the value of success- if it's 0, cancel everything, revert to the last previous version, & set self.proceed = 1
~	 ChooseIndex / EnterText / ChooseDetailIndex do nothing but get one input from the user; once the corresponding window closes, their job is done even if it was successful
.	 AddPQDie (1x ChooseIndex, 1x EnterText) (no return value)
.	 ChoosePQDieSize (3x AddPQDie, 1x ChooseIndex) (returns set of unused dice)
.	 ChoosePQ (2x ChoosePQDieSize, 1x ChooseIndex, 1x ExpandWindow) (returns [list of unused triplets, list of unused die sizes])
.	 AssignAllPQ (1x ChoosePQ) (no return value)
.	 AddPrinciple (1x ExpandWindow) (no return value)
.	 ChoosePrinciple (2x AddPrinciple, 1x ChooseIndex, 1x ChooseDetailIndex, 1x PrincipleWindow) (no return value)
.	 AddBackground (1x ChoosePQDieSize, 1x AssignAllPQ, 1x ChoosePrinciple) (returns set of Power Source dice... but why?)
.	 GuidedBackground (2x ChooseIndex, 1x ChooseDetailIndex) (returns Background index)
.	 ConstructedBackground (1x ChooseDetailIndex) (returns Background index)
.	 ChooseAbility (7x ChooseIndex, 1x EnterText, 1x ChooseDetailIndex, 1x ExpandWindow) (returns set of unused abilities if add==1, the finished Ability otherwise)
.	 AddPowerSource (7x ChoosePQ, 1x AssignAllPQ, 2x ChooseAbility, 3x ChooseIndex) (returns set of Archetype dice... but why?)
.	 GuidedPowerSource (2x ChooseIndex, 1x ChooseDetailIndex) (returns Power Source index)
.	 ConstructedPowerSource (1x ChooseDetailIndex) (returns Power Source index)
.	 AddMode (1x ChooseAbility, 3x ChooseIndex, 1x EnterText) (no return value)
~	 DisplayMode / ModeDetails / DisplayForm / FormDetails don't take any input
.	 ChooseForm (1x ChooseAbility, 8x ChooseIndex, 1x EnterText, 1x ChooseDetailIndex, 1x SwapWindow) (no return value)
.	 AddArchetype (1x ChooseForm, 4x AddMode, 6x ChooseAbility, 2x ChoosePrinciple, 2x AssignAllPQ, 6x ChoosePQ, 1x ChoosePQDieSize, 14x ChooseIndex, 1x EnterText, 5x ChooseDetailIndex, 4x AssignWindow, 3x SwapWindow) (no return value)
.	 GuidedArchetype (3x ChooseIndex, 2x ChooseDetailIndex) (returns [Archetype index, modifier index])
.	 ConstructedArchetype (2x ChooseDetailIndex) (returns [Archetype index, modifier index])
.	 AddPersonality (1x ChooseAbility, 1x ChoosePQDieSize, 1x ChooseIndex) (no return value)
.	 GuidedPersonality (3x ChooseIndex, 1x ChooseDetailIndex) (returns [Personality index])
.	 ConstructedPersonality (2x ChooseIndex, 2x ChooseDetailIndex) (returns [Personality index] or [Heroic Personality index, Civilian Personality index, Out Ability index]
.	 AddRedAbility (1x ChooseAbility, 1x ExpandWindow) (no return value)
.	 AddRetcon (1x AddRedAbility, 1x ChoosePrinciple, 1x ChoosePQ, 8x ChooseIndex, 1x ChooseDetailIndex, 1x ExpandWindow, 2x SwapWindow) (no return value)
~	 HealthRanges doesn't take any input
.	 AddHealth (3x ChooseIndex) (no return value)
??	 CreateHero (1x AddHealth, 1x AddRetcon, 1x AddRedAbility, 1x GuidedPersonality, 2x ConstructedPersonality, 3x AddPersonality, 1x GuidedArchetype, 1x ConstructedArchetype, 1x AddArchetype, 1x GuidedPowerSource, 1x ConstructedPowerSource, 1x AddPowerSource, 1x GuidedBackground, 1x ConstructedBackground, 1x AddBackground, 4x ChooseIndex) (no return value)
	  What does "drop everything and revert" look like for this method?
~	 Abilities / DisplayStep / StepDetails / DisplaySteps / AllStepDetails / display / details don't take any input
.	 AddHeroBackground
.	 AddHeroPowerSource
.	 AddHeroArchetype
.	 AddHeroPersonality
.	 AddHeroRedAbilities
.	 AddHeroRetcon
.	 AddHeroHealth
.	 RenameAny
.	 RenameHero (3x)
.	 RenameAbilities (2x)
.	 RenameModes (2x)
.	 RenameForms (2x)
.	 RenamePQDice (2x)
.	 SaveTXT (2x)
.	 RevertHero
  To resume from the middle of a step...
.  HeroFrame needs better understanding of when a step is finished
   AddHero* methods need to recognize when a Characteristic has been chosen but not completed, and skip the Guided*/Constructed* call if so
.	AddHeroBackground
.	AddHeroPowerSource
	AddHeroArchetype
.	AddHeroPersonality
   Add[step] methods need to be split into modules by substep that can check whether they're already complete and be performed or skipped accordingly
.	Completion checks...
.	 AddBackground
.	  Qualities
.	  Principle
.	 AddPowerSource
.	  Powers
.	  Yellow Abilities
.	  Green Abilities (Power Source: not Training, Mystical, Supernatural, Alien, Genius, Cosmos, Unknown, or The Multiverse)
.	  Power Source Bonus (Power Source: Training / Mystical / Supernatural / Alien / Genius / Cosmos / Unknown / The Multiverse)
.	 AddArchetype
.	  Primary PQ
.	  Secondary PQs
.	  Tertiary PQs 
.	   secondary_count = 1 (Archetype: Physical Powerhouse / Blaster / Elemental Manipulator; Power Source: not Accident, Cursed, or Extradimensional)
.	   secondary_count = 2 (Archetype: not Physical Powerhouse, Blaster, or Elemental Manipulator; Power Source: not Accident, Cursed, or Extradimensional)
.	  Bonus PQs
.	  Abilities
.	  Auxiliary Sheets
.	   Modular
.	   Form-Changer
.	   Minion-Maker
.	  Transition Type
.	  Divided Nature
.	  Principle
.	 AddPersonality
.	  Roleplaying Quality
.	  Status Dice
.	  Out Ability
.	  Personality Bonus
.	Perform or skip...
.	AddBackground
.	  Qualities
.	  Principle
.	 AddPowerSource
.	  Powers
.	  Yellow Abilities
.	  Green Abilities (Power Source: not Training, Mystical, Supernatural, Alien, Genius, Cosmos, Unknown, or The Multiverse)
.	  Power Source Bonus (Power Source: Training / Mystical / Supernatural / Alien / Genius / Cosmos / Unknown / The Multiverse)
.	 AddArchetype
.	  Primary PQ
.	  Secondary PQs
.	  Tertiary PQs
.	   secondary_count = 1 (Archetype: Physical Powerhouse / Blaster / Elemental Manipulator; Power Source: not Accident, Cursed, or Extradimensional)
.	   secondary_count = 2 (Archetype: not Physical Powerhouse, Blaster, or Elemental Manipulator; Power Source: not Accident, Cursed, or Extradimensional)
.	  Bonus PQs (Archetype: Robot/Cyborg, Power Source: Training, Archetype: Modular & <4 Power dice)
.	  Abilities
.	   Modular
.	   not Modular
.	  Auxiliary Sheets
.	   Modular
.	   Form-Changer
.	   Minion-Maker
.	  Transition Type
.	  Divided Nature
.	  Principle
.	   Divided
.	   not Divided
.	 AddPersonality
.	  Roleplaying Quality
.	  Status Dice
.	  Out Ability
.	  Personality Bonus
~	AddRedAbility already is a single module
~	AddRetcon already has a single completeness check, which is all it needs because it only performs one substep
.	AddHealth
 Can we track WHEN in a step an attribute was added/modified, e.g. "this one was the primary power/quality for the Archetype", and get StepDetails to show that?
  Determine substeps...
.  Background: Qualities, Principle
.  Power Source: Powers, Yellow Abilities, Green Abilities, Power Source Bonus
.  Archetype: Primary PQ, Secondary PQs, Tertiary PQs, Bonus PQs, Abilities, Auxiliary Sheets, Transition Type, Divided Nature, Principle
.  Personality: Roleplaying Quality, Status Dice, Out Ability, Personality Bonus
.  Red Abilities: Red Ability 1, Red Ability 2
.  Retcon: Swap 2 Power dice, Swap 2 Quality dice, Change the Power/Quality used in an Ability, Add a d6 Power/Quality from ANY category, Upgrade Red status die by one size, Change one of your Principles to any other Principle, Gain another Red ability
.  Health: Start with 8, Red die, Power/Quality, 4 or 1d8
  Now that we track this, can we indicate it to the user during the process?
 ~ The number by itself doesn't tell the user anything, they need something more like a list of applicable substeps with the current one highlighted
 
Context Menu
 Entries...
. Copy Text (any widget that has text)
. Edit Name (any widget associated with a hero name field, Power, Quality, Ability, Form, or Mode)
. Redo from Step (any widget associated with a hero name field, Power, Quality, Ability, Form, Mode, Status, or Health field)
  
Let EditNames rename...
.	Abilities
	Principles?
.	Forms
.	Modes
.	dice

Bind Home and End to first and last entries in SelectFrame and ExpandFrame
Bind Up and Down to individual OptionMenu objects in SwapFrame (you should be able to use these once you've selected an OptionMenu using Tab)
Use SwapWindow to pick 2 Form Powers to upgrade in Yellow Form
 
Default background is gray94

Label
	background=self.normalBG
	activebackground=self.copyBG
Button
	background=self.normalBG
	activebackground=self.clickedBG
Radiobutton
	background=self.normalBG
	activebackground=self.normalBG
OptionMenu
	background=self.normalBG
	activebackground=self.normalBG
Menu
	background=self.normalBG